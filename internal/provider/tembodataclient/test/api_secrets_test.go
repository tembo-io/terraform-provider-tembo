/*
Tembo Data API

Testing SecretsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package tembodataclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/tembo-io/terraform-provider-tembo/tembodataclient"
)

func Test_tembodataclient_SecretsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SecretsAPIService GetSecret", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string
		var secretName string

		resp, httpRes, err := apiClient.SecretsAPI.GetSecret(context.Background(), namespace, secretName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsAPIService GetSecretNames", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.SecretsAPI.GetSecretNames(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsAPIService GetSecretNamesV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var instanceId string

		resp, httpRes, err := apiClient.SecretsAPI.GetSecretNamesV1(context.Background(), orgId, instanceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsAPIService GetSecretV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var instanceId string
		var secretName string

		resp, httpRes, err := apiClient.SecretsAPI.GetSecretV1(context.Background(), orgId, instanceId, secretName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
