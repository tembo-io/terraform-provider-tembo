/*
Tembo Cloud

Platform API for Tembo Cloud

API version: v1.0.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the CreateCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCluster{}

// CreateCluster struct for CreateCluster
type CreateCluster struct {
	Cpu Cpu `json:"cpu"`
	EntityProperties interface{} `json:"entity_properties,omitempty"`
	EntityType *EntityType `json:"entity_type,omitempty"`
	Environment Environment `json:"environment"`
	ExtraDomainsRw []string `json:"extra_domains_rw,omitempty"`
	InstanceName string `json:"instance_name"`
	Memory Memory `json:"memory"`
	OrganizationId NullableString `json:"organization_id,omitempty"`
	PostgresConfigs []PgConfig `json:"postgres_configs,omitempty"`
	Replicas NullableInt32 `json:"replicas,omitempty"`
	Storage Storage `json:"storage"`
}

// NewCreateCluster instantiates a new CreateCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCluster(cpu Cpu, environment Environment, instanceName string, memory Memory, storage Storage) *CreateCluster {
	this := CreateCluster{}
	this.Cpu = cpu
	this.Environment = environment
	this.InstanceName = instanceName
	this.Memory = memory
	this.Storage = storage
	return &this
}

// NewCreateClusterWithDefaults instantiates a new CreateCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterWithDefaults() *CreateCluster {
	this := CreateCluster{}
	return &this
}

// GetCpu returns the Cpu field value
func (o *CreateCluster) GetCpu() Cpu {
	if o == nil {
		var ret Cpu
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetCpuOk() (*Cpu, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *CreateCluster) SetCpu(v Cpu) {
	o.Cpu = v
}

// GetEntityProperties returns the EntityProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCluster) GetEntityProperties() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EntityProperties
}

// GetEntityPropertiesOk returns a tuple with the EntityProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCluster) GetEntityPropertiesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EntityProperties) {
		return nil, false
	}
	return &o.EntityProperties, true
}

// HasEntityProperties returns a boolean if a field has been set.
func (o *CreateCluster) HasEntityProperties() bool {
	if o != nil && IsNil(o.EntityProperties) {
		return true
	}

	return false
}

// SetEntityProperties gets a reference to the given interface{} and assigns it to the EntityProperties field.
func (o *CreateCluster) SetEntityProperties(v interface{}) {
	o.EntityProperties = v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *CreateCluster) GetEntityType() EntityType {
	if o == nil || IsNil(o.EntityType) {
		var ret EntityType
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetEntityTypeOk() (*EntityType, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *CreateCluster) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given EntityType and assigns it to the EntityType field.
func (o *CreateCluster) SetEntityType(v EntityType) {
	o.EntityType = &v
}

// GetEnvironment returns the Environment field value
func (o *CreateCluster) GetEnvironment() Environment {
	if o == nil {
		var ret Environment
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetEnvironmentOk() (*Environment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *CreateCluster) SetEnvironment(v Environment) {
	o.Environment = v
}

// GetExtraDomainsRw returns the ExtraDomainsRw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCluster) GetExtraDomainsRw() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExtraDomainsRw
}

// GetExtraDomainsRwOk returns a tuple with the ExtraDomainsRw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCluster) GetExtraDomainsRwOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtraDomainsRw) {
		return nil, false
	}
	return o.ExtraDomainsRw, true
}

// HasExtraDomainsRw returns a boolean if a field has been set.
func (o *CreateCluster) HasExtraDomainsRw() bool {
	if o != nil && IsNil(o.ExtraDomainsRw) {
		return true
	}

	return false
}

// SetExtraDomainsRw gets a reference to the given []string and assigns it to the ExtraDomainsRw field.
func (o *CreateCluster) SetExtraDomainsRw(v []string) {
	o.ExtraDomainsRw = v
}

// GetInstanceName returns the InstanceName field value
func (o *CreateCluster) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *CreateCluster) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetMemory returns the Memory field value
func (o *CreateCluster) GetMemory() Memory {
	if o == nil {
		var ret Memory
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetMemoryOk() (*Memory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *CreateCluster) SetMemory(v Memory) {
	o.Memory = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCluster) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCluster) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateCluster) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *CreateCluster) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateCluster) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateCluster) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetPostgresConfigs returns the PostgresConfigs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCluster) GetPostgresConfigs() []PgConfig {
	if o == nil {
		var ret []PgConfig
		return ret
	}
	return o.PostgresConfigs
}

// GetPostgresConfigsOk returns a tuple with the PostgresConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCluster) GetPostgresConfigsOk() ([]PgConfig, bool) {
	if o == nil || IsNil(o.PostgresConfigs) {
		return nil, false
	}
	return o.PostgresConfigs, true
}

// HasPostgresConfigs returns a boolean if a field has been set.
func (o *CreateCluster) HasPostgresConfigs() bool {
	if o != nil && IsNil(o.PostgresConfigs) {
		return true
	}

	return false
}

// SetPostgresConfigs gets a reference to the given []PgConfig and assigns it to the PostgresConfigs field.
func (o *CreateCluster) SetPostgresConfigs(v []PgConfig) {
	o.PostgresConfigs = v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCluster) GetReplicas() int32 {
	if o == nil || IsNil(o.Replicas.Get()) {
		var ret int32
		return ret
	}
	return *o.Replicas.Get()
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCluster) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Replicas.Get(), o.Replicas.IsSet()
}

// HasReplicas returns a boolean if a field has been set.
func (o *CreateCluster) HasReplicas() bool {
	if o != nil && o.Replicas.IsSet() {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given NullableInt32 and assigns it to the Replicas field.
func (o *CreateCluster) SetReplicas(v int32) {
	o.Replicas.Set(&v)
}
// SetReplicasNil sets the value for Replicas to be an explicit nil
func (o *CreateCluster) SetReplicasNil() {
	o.Replicas.Set(nil)
}

// UnsetReplicas ensures that no value is present for Replicas, not even an explicit nil
func (o *CreateCluster) UnsetReplicas() {
	o.Replicas.Unset()
}

// GetStorage returns the Storage field value
func (o *CreateCluster) GetStorage() Storage {
	if o == nil {
		var ret Storage
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetStorageOk() (*Storage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *CreateCluster) SetStorage(v Storage) {
	o.Storage = v
}

func (o CreateCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	if o.EntityProperties != nil {
		toSerialize["entity_properties"] = o.EntityProperties
	}
	if !IsNil(o.EntityType) {
		toSerialize["entity_type"] = o.EntityType
	}
	toSerialize["environment"] = o.Environment
	if o.ExtraDomainsRw != nil {
		toSerialize["extra_domains_rw"] = o.ExtraDomainsRw
	}
	toSerialize["instance_name"] = o.InstanceName
	toSerialize["memory"] = o.Memory
	if o.OrganizationId.IsSet() {
		toSerialize["organization_id"] = o.OrganizationId.Get()
	}
	if o.PostgresConfigs != nil {
		toSerialize["postgres_configs"] = o.PostgresConfigs
	}
	if o.Replicas.IsSet() {
		toSerialize["replicas"] = o.Replicas.Get()
	}
	toSerialize["storage"] = o.Storage
	return toSerialize, nil
}

type NullableCreateCluster struct {
	value *CreateCluster
	isSet bool
}

func (v NullableCreateCluster) Get() *CreateCluster {
	return v.value
}

func (v *NullableCreateCluster) Set(val *CreateCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCluster(val *CreateCluster) *NullableCreateCluster {
	return &NullableCreateCluster{value: val, isSet: true}
}

func (v NullableCreateCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


