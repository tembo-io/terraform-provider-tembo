/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the IntOrStringOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntOrStringOneOf1{}

// IntOrStringOneOf1 struct for IntOrStringOneOf1
type IntOrStringOneOf1 struct {
	String string `json:"String"`
}

// NewIntOrStringOneOf1 instantiates a new IntOrStringOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntOrStringOneOf1(string_ string) *IntOrStringOneOf1 {
	this := IntOrStringOneOf1{}
	this.String = string_
	return &this
}

// NewIntOrStringOneOf1WithDefaults instantiates a new IntOrStringOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntOrStringOneOf1WithDefaults() *IntOrStringOneOf1 {
	this := IntOrStringOneOf1{}
	return &this
}

// GetString returns the String field value
func (o *IntOrStringOneOf1) GetString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.String
}

// GetStringOk returns a tuple with the String field value
// and a boolean to check if the value has been set.
func (o *IntOrStringOneOf1) GetStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.String, true
}

// SetString sets field value
func (o *IntOrStringOneOf1) SetString(v string) {
	o.String = v
}

func (o IntOrStringOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntOrStringOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["String"] = o.String
	return toSerialize, nil
}

type NullableIntOrStringOneOf1 struct {
	value *IntOrStringOneOf1
	isSet bool
}

func (v NullableIntOrStringOneOf1) Get() *IntOrStringOneOf1 {
	return v.value
}

func (v *NullableIntOrStringOneOf1) Set(val *IntOrStringOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableIntOrStringOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableIntOrStringOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntOrStringOneOf1(val *IntOrStringOneOf1) *NullableIntOrStringOneOf1 {
	return &NullableIntOrStringOneOf1{value: val, isSet: true}
}

func (v NullableIntOrStringOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntOrStringOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


