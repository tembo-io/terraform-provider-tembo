/*
Tembo Cloud

Platform API for Tembo Cloud

API version: v1.0.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
	"time"
)

// checks if the Instance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Instance{}

// Instance struct for Instance
type Instance struct {
	ConnectionInfo NullableConnectionInfo `json:"connection_info,omitempty"`
	Cpu Cpu `json:"cpu"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Environment Environment `json:"environment"`
	Extensions []ExtensionStatus `json:"extensions,omitempty"`
	ExtraDomainsRw []string `json:"extra_domains_rw,omitempty"`
	InstanceId string `json:"instance_id"`
	InstanceName string `json:"instance_name"`
	LastUpdatedAt *time.Time `json:"last_updated_at,omitempty"`
	Memory Memory `json:"memory"`
	OrganizationId string `json:"organization_id"`
	OrganizationName string `json:"organization_name"`
	PostgresConfigs []PgConfig `json:"postgres_configs,omitempty"`
	Replicas int32 `json:"replicas"`
	StackType EntityType `json:"stack_type"`
	State State `json:"state"`
	Storage Storage `json:"storage"`
	TrunkInstalls []TrunkInstallStatus `json:"trunk_installs,omitempty"`
}

// NewInstance instantiates a new Instance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstance(cpu Cpu, environment Environment, instanceId string, instanceName string, memory Memory, organizationId string, organizationName string, replicas int32, stackType EntityType, state State, storage Storage) *Instance {
	this := Instance{}
	this.Cpu = cpu
	this.Environment = environment
	this.InstanceId = instanceId
	this.InstanceName = instanceName
	this.Memory = memory
	this.OrganizationId = organizationId
	this.OrganizationName = organizationName
	this.Replicas = replicas
	this.StackType = stackType
	this.State = state
	this.Storage = storage
	return &this
}

// NewInstanceWithDefaults instantiates a new Instance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceWithDefaults() *Instance {
	this := Instance{}
	return &this
}

// GetConnectionInfo returns the ConnectionInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetConnectionInfo() ConnectionInfo {
	if o == nil || IsNil(o.ConnectionInfo.Get()) {
		var ret ConnectionInfo
		return ret
	}
	return *o.ConnectionInfo.Get()
}

// GetConnectionInfoOk returns a tuple with the ConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetConnectionInfoOk() (*ConnectionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionInfo.Get(), o.ConnectionInfo.IsSet()
}

// HasConnectionInfo returns a boolean if a field has been set.
func (o *Instance) HasConnectionInfo() bool {
	if o != nil && o.ConnectionInfo.IsSet() {
		return true
	}

	return false
}

// SetConnectionInfo gets a reference to the given NullableConnectionInfo and assigns it to the ConnectionInfo field.
func (o *Instance) SetConnectionInfo(v ConnectionInfo) {
	o.ConnectionInfo.Set(&v)
}
// SetConnectionInfoNil sets the value for ConnectionInfo to be an explicit nil
func (o *Instance) SetConnectionInfoNil() {
	o.ConnectionInfo.Set(nil)
}

// UnsetConnectionInfo ensures that no value is present for ConnectionInfo, not even an explicit nil
func (o *Instance) UnsetConnectionInfo() {
	o.ConnectionInfo.Unset()
}

// GetCpu returns the Cpu field value
func (o *Instance) GetCpu() Cpu {
	if o == nil {
		var ret Cpu
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *Instance) GetCpuOk() (*Cpu, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *Instance) SetCpu(v Cpu) {
	o.Cpu = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Instance) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Instance) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Instance) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEnvironment returns the Environment field value
func (o *Instance) GetEnvironment() Environment {
	if o == nil {
		var ret Environment
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *Instance) GetEnvironmentOk() (*Environment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *Instance) SetEnvironment(v Environment) {
	o.Environment = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetExtensions() []ExtensionStatus {
	if o == nil {
		var ret []ExtensionStatus
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetExtensionsOk() ([]ExtensionStatus, bool) {
	if o == nil || IsNil(o.Extensions) {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Instance) HasExtensions() bool {
	if o != nil && IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []ExtensionStatus and assigns it to the Extensions field.
func (o *Instance) SetExtensions(v []ExtensionStatus) {
	o.Extensions = v
}

// GetExtraDomainsRw returns the ExtraDomainsRw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetExtraDomainsRw() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExtraDomainsRw
}

// GetExtraDomainsRwOk returns a tuple with the ExtraDomainsRw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetExtraDomainsRwOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtraDomainsRw) {
		return nil, false
	}
	return o.ExtraDomainsRw, true
}

// HasExtraDomainsRw returns a boolean if a field has been set.
func (o *Instance) HasExtraDomainsRw() bool {
	if o != nil && IsNil(o.ExtraDomainsRw) {
		return true
	}

	return false
}

// SetExtraDomainsRw gets a reference to the given []string and assigns it to the ExtraDomainsRw field.
func (o *Instance) SetExtraDomainsRw(v []string) {
	o.ExtraDomainsRw = v
}

// GetInstanceId returns the InstanceId field value
func (o *Instance) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *Instance) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *Instance) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetInstanceName returns the InstanceName field value
func (o *Instance) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *Instance) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *Instance) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *Instance) GetLastUpdatedAt() time.Time {
	if o == nil || IsNil(o.LastUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetLastUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedAt) {
		return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *Instance) HasLastUpdatedAt() bool {
	if o != nil && !IsNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given time.Time and assigns it to the LastUpdatedAt field.
func (o *Instance) SetLastUpdatedAt(v time.Time) {
	o.LastUpdatedAt = &v
}

// GetMemory returns the Memory field value
func (o *Instance) GetMemory() Memory {
	if o == nil {
		var ret Memory
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *Instance) GetMemoryOk() (*Memory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *Instance) SetMemory(v Memory) {
	o.Memory = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *Instance) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *Instance) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *Instance) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *Instance) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *Instance) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *Instance) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetPostgresConfigs returns the PostgresConfigs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetPostgresConfigs() []PgConfig {
	if o == nil {
		var ret []PgConfig
		return ret
	}
	return o.PostgresConfigs
}

// GetPostgresConfigsOk returns a tuple with the PostgresConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetPostgresConfigsOk() ([]PgConfig, bool) {
	if o == nil || IsNil(o.PostgresConfigs) {
		return nil, false
	}
	return o.PostgresConfigs, true
}

// HasPostgresConfigs returns a boolean if a field has been set.
func (o *Instance) HasPostgresConfigs() bool {
	if o != nil && IsNil(o.PostgresConfigs) {
		return true
	}

	return false
}

// SetPostgresConfigs gets a reference to the given []PgConfig and assigns it to the PostgresConfigs field.
func (o *Instance) SetPostgresConfigs(v []PgConfig) {
	o.PostgresConfigs = v
}

// GetReplicas returns the Replicas field value
func (o *Instance) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *Instance) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *Instance) SetReplicas(v int32) {
	o.Replicas = v
}

// GetStackType returns the StackType field value
func (o *Instance) GetStackType() EntityType {
	if o == nil {
		var ret EntityType
		return ret
	}

	return o.StackType
}

// GetStackTypeOk returns a tuple with the StackType field value
// and a boolean to check if the value has been set.
func (o *Instance) GetStackTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StackType, true
}

// SetStackType sets field value
func (o *Instance) SetStackType(v EntityType) {
	o.StackType = v
}

// GetState returns the State field value
func (o *Instance) GetState() State {
	if o == nil {
		var ret State
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Instance) GetStateOk() (*State, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Instance) SetState(v State) {
	o.State = v
}

// GetStorage returns the Storage field value
func (o *Instance) GetStorage() Storage {
	if o == nil {
		var ret Storage
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *Instance) GetStorageOk() (*Storage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *Instance) SetStorage(v Storage) {
	o.Storage = v
}

// GetTrunkInstalls returns the TrunkInstalls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetTrunkInstalls() []TrunkInstallStatus {
	if o == nil {
		var ret []TrunkInstallStatus
		return ret
	}
	return o.TrunkInstalls
}

// GetTrunkInstallsOk returns a tuple with the TrunkInstalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetTrunkInstallsOk() ([]TrunkInstallStatus, bool) {
	if o == nil || IsNil(o.TrunkInstalls) {
		return nil, false
	}
	return o.TrunkInstalls, true
}

// HasTrunkInstalls returns a boolean if a field has been set.
func (o *Instance) HasTrunkInstalls() bool {
	if o != nil && IsNil(o.TrunkInstalls) {
		return true
	}

	return false
}

// SetTrunkInstalls gets a reference to the given []TrunkInstallStatus and assigns it to the TrunkInstalls field.
func (o *Instance) SetTrunkInstalls(v []TrunkInstallStatus) {
	o.TrunkInstalls = v
}

func (o Instance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Instance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionInfo.IsSet() {
		toSerialize["connection_info"] = o.ConnectionInfo.Get()
	}
	toSerialize["cpu"] = o.Cpu
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	toSerialize["environment"] = o.Environment
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.ExtraDomainsRw != nil {
		toSerialize["extra_domains_rw"] = o.ExtraDomainsRw
	}
	toSerialize["instance_id"] = o.InstanceId
	toSerialize["instance_name"] = o.InstanceName
	if !IsNil(o.LastUpdatedAt) {
		toSerialize["last_updated_at"] = o.LastUpdatedAt
	}
	toSerialize["memory"] = o.Memory
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["organization_name"] = o.OrganizationName
	if o.PostgresConfigs != nil {
		toSerialize["postgres_configs"] = o.PostgresConfigs
	}
	toSerialize["replicas"] = o.Replicas
	toSerialize["stack_type"] = o.StackType
	toSerialize["state"] = o.State
	toSerialize["storage"] = o.Storage
	if o.TrunkInstalls != nil {
		toSerialize["trunk_installs"] = o.TrunkInstalls
	}
	return toSerialize, nil
}

type NullableInstance struct {
	value *Instance
	isSet bool
}

func (v NullableInstance) Get() *Instance {
	return v.value
}

func (v *NullableInstance) Set(val *Instance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstance(val *Instance) *NullableInstance {
	return &NullableInstance{value: val, isSet: true}
}

func (v NullableInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


