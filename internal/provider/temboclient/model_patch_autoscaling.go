/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the PatchAutoscaling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchAutoscaling{}

// PatchAutoscaling struct for PatchAutoscaling
type PatchAutoscaling struct {
	Autostop NullableAutoStop `json:"autostop,omitempty"`
	Storage NullableAutoscalingStorage `json:"storage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchAutoscaling PatchAutoscaling

// NewPatchAutoscaling instantiates a new PatchAutoscaling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchAutoscaling() *PatchAutoscaling {
	this := PatchAutoscaling{}
	return &this
}

// NewPatchAutoscalingWithDefaults instantiates a new PatchAutoscaling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchAutoscalingWithDefaults() *PatchAutoscaling {
	this := PatchAutoscaling{}
	return &this
}

// GetAutostop returns the Autostop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchAutoscaling) GetAutostop() AutoStop {
	if o == nil || IsNil(o.Autostop.Get()) {
		var ret AutoStop
		return ret
	}
	return *o.Autostop.Get()
}

// GetAutostopOk returns a tuple with the Autostop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchAutoscaling) GetAutostopOk() (*AutoStop, bool) {
	if o == nil {
		return nil, false
	}
	return o.Autostop.Get(), o.Autostop.IsSet()
}

// HasAutostop returns a boolean if a field has been set.
func (o *PatchAutoscaling) HasAutostop() bool {
	if o != nil && o.Autostop.IsSet() {
		return true
	}

	return false
}

// SetAutostop gets a reference to the given NullableAutoStop and assigns it to the Autostop field.
func (o *PatchAutoscaling) SetAutostop(v AutoStop) {
	o.Autostop.Set(&v)
}
// SetAutostopNil sets the value for Autostop to be an explicit nil
func (o *PatchAutoscaling) SetAutostopNil() {
	o.Autostop.Set(nil)
}

// UnsetAutostop ensures that no value is present for Autostop, not even an explicit nil
func (o *PatchAutoscaling) UnsetAutostop() {
	o.Autostop.Unset()
}

// GetStorage returns the Storage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchAutoscaling) GetStorage() AutoscalingStorage {
	if o == nil || IsNil(o.Storage.Get()) {
		var ret AutoscalingStorage
		return ret
	}
	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchAutoscaling) GetStorageOk() (*AutoscalingStorage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// HasStorage returns a boolean if a field has been set.
func (o *PatchAutoscaling) HasStorage() bool {
	if o != nil && o.Storage.IsSet() {
		return true
	}

	return false
}

// SetStorage gets a reference to the given NullableAutoscalingStorage and assigns it to the Storage field.
func (o *PatchAutoscaling) SetStorage(v AutoscalingStorage) {
	o.Storage.Set(&v)
}
// SetStorageNil sets the value for Storage to be an explicit nil
func (o *PatchAutoscaling) SetStorageNil() {
	o.Storage.Set(nil)
}

// UnsetStorage ensures that no value is present for Storage, not even an explicit nil
func (o *PatchAutoscaling) UnsetStorage() {
	o.Storage.Unset()
}

func (o PatchAutoscaling) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchAutoscaling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Autostop.IsSet() {
		toSerialize["autostop"] = o.Autostop.Get()
	}
	if o.Storage.IsSet() {
		toSerialize["storage"] = o.Storage.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchAutoscaling) UnmarshalJSON(data []byte) (err error) {
	varPatchAutoscaling := _PatchAutoscaling{}

	err = json.Unmarshal(data, &varPatchAutoscaling)

	if err != nil {
		return err
	}

	*o = PatchAutoscaling(varPatchAutoscaling)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "autostop")
		delete(additionalProperties, "storage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchAutoscaling struct {
	value *PatchAutoscaling
	isSet bool
}

func (v NullablePatchAutoscaling) Get() *PatchAutoscaling {
	return v.value
}

func (v *NullablePatchAutoscaling) Set(val *PatchAutoscaling) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchAutoscaling) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchAutoscaling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchAutoscaling(val *PatchAutoscaling) *NullablePatchAutoscaling {
	return &NullablePatchAutoscaling{value: val, isSet: true}
}

func (v NullablePatchAutoscaling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchAutoscaling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


