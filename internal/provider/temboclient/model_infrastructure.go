/*
Tembo Cloud

Platform API for Tembo Cloud

API version: v1.0.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the Infrastructure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Infrastructure{}

// Infrastructure struct for Infrastructure
type Infrastructure struct {
	Cpu Cpu `json:"cpu"`
	InstanceType InstanceTypes `json:"instance_type"`
	Memory Memory `json:"memory"`
	Provider *CloudProvider `json:"provider,omitempty"`
	Region *string `json:"region,omitempty"`
	StorageClass StorageClass `json:"storage_class"`
	StorageSize Storage `json:"storage_size"`
}

// NewInfrastructure instantiates a new Infrastructure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructure(cpu Cpu, instanceType InstanceTypes, memory Memory, storageClass StorageClass, storageSize Storage) *Infrastructure {
	this := Infrastructure{}
	this.Cpu = cpu
	this.InstanceType = instanceType
	this.Memory = memory
	this.StorageClass = storageClass
	this.StorageSize = storageSize
	return &this
}

// NewInfrastructureWithDefaults instantiates a new Infrastructure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructureWithDefaults() *Infrastructure {
	this := Infrastructure{}
	return &this
}

// GetCpu returns the Cpu field value
func (o *Infrastructure) GetCpu() Cpu {
	if o == nil {
		var ret Cpu
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetCpuOk() (*Cpu, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *Infrastructure) SetCpu(v Cpu) {
	o.Cpu = v
}

// GetInstanceType returns the InstanceType field value
func (o *Infrastructure) GetInstanceType() InstanceTypes {
	if o == nil {
		var ret InstanceTypes
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetInstanceTypeOk() (*InstanceTypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *Infrastructure) SetInstanceType(v InstanceTypes) {
	o.InstanceType = v
}

// GetMemory returns the Memory field value
func (o *Infrastructure) GetMemory() Memory {
	if o == nil {
		var ret Memory
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetMemoryOk() (*Memory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *Infrastructure) SetMemory(v Memory) {
	o.Memory = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *Infrastructure) GetProvider() CloudProvider {
	if o == nil || IsNil(o.Provider) {
		var ret CloudProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetProviderOk() (*CloudProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *Infrastructure) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given CloudProvider and assigns it to the Provider field.
func (o *Infrastructure) SetProvider(v CloudProvider) {
	o.Provider = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Infrastructure) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Infrastructure) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Infrastructure) SetRegion(v string) {
	o.Region = &v
}

// GetStorageClass returns the StorageClass field value
func (o *Infrastructure) GetStorageClass() StorageClass {
	if o == nil {
		var ret StorageClass
		return ret
	}

	return o.StorageClass
}

// GetStorageClassOk returns a tuple with the StorageClass field value
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetStorageClassOk() (*StorageClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageClass, true
}

// SetStorageClass sets field value
func (o *Infrastructure) SetStorageClass(v StorageClass) {
	o.StorageClass = v
}

// GetStorageSize returns the StorageSize field value
func (o *Infrastructure) GetStorageSize() Storage {
	if o == nil {
		var ret Storage
		return ret
	}

	return o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value
// and a boolean to check if the value has been set.
func (o *Infrastructure) GetStorageSizeOk() (*Storage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSize, true
}

// SetStorageSize sets field value
func (o *Infrastructure) SetStorageSize(v Storage) {
	o.StorageSize = v
}

func (o Infrastructure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Infrastructure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	toSerialize["instance_type"] = o.InstanceType
	toSerialize["memory"] = o.Memory
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["storage_class"] = o.StorageClass
	toSerialize["storage_size"] = o.StorageSize
	return toSerialize, nil
}

type NullableInfrastructure struct {
	value *Infrastructure
	isSet bool
}

func (v NullableInfrastructure) Get() *Infrastructure {
	return v.value
}

func (v *NullableInfrastructure) Set(val *Infrastructure) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructure) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructure(val *Infrastructure) *NullableInfrastructure {
	return &NullableInfrastructure{value: val, isSet: true}
}

func (v NullableInfrastructure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


