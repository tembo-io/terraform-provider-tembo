/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the ResourceRequirements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRequirements{}

// ResourceRequirements struct for ResourceRequirements
type ResourceRequirements struct {
	Limits NullableResource `json:"limits,omitempty"`
	Requests NullableResource `json:"requests,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceRequirements ResourceRequirements

// NewResourceRequirements instantiates a new ResourceRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRequirements() *ResourceRequirements {
	this := ResourceRequirements{}
	return &this
}

// NewResourceRequirementsWithDefaults instantiates a new ResourceRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRequirementsWithDefaults() *ResourceRequirements {
	this := ResourceRequirements{}
	return &this
}

// GetLimits returns the Limits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceRequirements) GetLimits() Resource {
	if o == nil || IsNil(o.Limits.Get()) {
		var ret Resource
		return ret
	}
	return *o.Limits.Get()
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceRequirements) GetLimitsOk() (*Resource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limits.Get(), o.Limits.IsSet()
}

// HasLimits returns a boolean if a field has been set.
func (o *ResourceRequirements) HasLimits() bool {
	if o != nil && o.Limits.IsSet() {
		return true
	}

	return false
}

// SetLimits gets a reference to the given NullableResource and assigns it to the Limits field.
func (o *ResourceRequirements) SetLimits(v Resource) {
	o.Limits.Set(&v)
}
// SetLimitsNil sets the value for Limits to be an explicit nil
func (o *ResourceRequirements) SetLimitsNil() {
	o.Limits.Set(nil)
}

// UnsetLimits ensures that no value is present for Limits, not even an explicit nil
func (o *ResourceRequirements) UnsetLimits() {
	o.Limits.Unset()
}

// GetRequests returns the Requests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceRequirements) GetRequests() Resource {
	if o == nil || IsNil(o.Requests.Get()) {
		var ret Resource
		return ret
	}
	return *o.Requests.Get()
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceRequirements) GetRequestsOk() (*Resource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests.Get(), o.Requests.IsSet()
}

// HasRequests returns a boolean if a field has been set.
func (o *ResourceRequirements) HasRequests() bool {
	if o != nil && o.Requests.IsSet() {
		return true
	}

	return false
}

// SetRequests gets a reference to the given NullableResource and assigns it to the Requests field.
func (o *ResourceRequirements) SetRequests(v Resource) {
	o.Requests.Set(&v)
}
// SetRequestsNil sets the value for Requests to be an explicit nil
func (o *ResourceRequirements) SetRequestsNil() {
	o.Requests.Set(nil)
}

// UnsetRequests ensures that no value is present for Requests, not even an explicit nil
func (o *ResourceRequirements) UnsetRequests() {
	o.Requests.Unset()
}

func (o ResourceRequirements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Limits.IsSet() {
		toSerialize["limits"] = o.Limits.Get()
	}
	if o.Requests.IsSet() {
		toSerialize["requests"] = o.Requests.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceRequirements) UnmarshalJSON(data []byte) (err error) {
	varResourceRequirements := _ResourceRequirements{}

	err = json.Unmarshal(data, &varResourceRequirements)

	if err != nil {
		return err
	}

	*o = ResourceRequirements(varResourceRequirements)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "limits")
		delete(additionalProperties, "requests")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceRequirements struct {
	value *ResourceRequirements
	isSet bool
}

func (v NullableResourceRequirements) Get() *ResourceRequirements {
	return v.value
}

func (v *NullableResourceRequirements) Set(val *ResourceRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRequirements(val *ResourceRequirements) *NullableResourceRequirements {
	return &NullableResourceRequirements{value: val, isSet: true}
}

func (v NullableResourceRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


