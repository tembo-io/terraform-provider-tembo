/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the Experimental type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Experimental{}

// Experimental struct for Experimental
type Experimental struct {
	Image NullableString `json:"image,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Experimental Experimental

// NewExperimental instantiates a new Experimental object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimental() *Experimental {
	this := Experimental{}
	return &this
}

// NewExperimentalWithDefaults instantiates a new Experimental object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentalWithDefaults() *Experimental {
	this := Experimental{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Experimental) GetImage() string {
	if o == nil || IsNil(o.Image.Get()) {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Experimental) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *Experimental) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *Experimental) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *Experimental) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *Experimental) UnsetImage() {
	o.Image.Unset()
}

func (o Experimental) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Experimental) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Experimental) UnmarshalJSON(data []byte) (err error) {
	varExperimental := _Experimental{}

	err = json.Unmarshal(data, &varExperimental)

	if err != nil {
		return err
	}

	*o = Experimental(varExperimental)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExperimental struct {
	value *Experimental
	isSet bool
}

func (v NullableExperimental) Get() *Experimental {
	return v.value
}

func (v *NullableExperimental) Set(val *Experimental) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimental) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimental) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimental(val *Experimental) *NullableExperimental {
	return &NullableExperimental{value: val, isSet: true}
}

func (v NullableExperimental) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimental) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


