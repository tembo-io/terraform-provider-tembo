/*
Tembo Cloud

Platform API for Tembo Cloud

API version: v1.0.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
	"time"
)

// checks if the ReadCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadCluster{}

// ReadCluster struct for ReadCluster
type ReadCluster struct {
	ConnectionInfo NullableConnectionInfo `json:"connection_info,omitempty"`
	Cpu NullableCpu `json:"cpu,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	EntityProperties interface{} `json:"entity_properties,omitempty"`
	EntityType EntityType `json:"entity_type"`
	Environment Environment `json:"environment"`
	Extensions []ExtensionStatus `json:"extensions,omitempty"`
	ExtraDomainsRw []string `json:"extra_domains_rw,omitempty"`
	InstanceId NullableString `json:"instance_id,omitempty"`
	InstanceName string `json:"instance_name"`
	LastUpdatedAt *time.Time `json:"last_updated_at,omitempty"`
	Memory NullableMemory `json:"memory,omitempty"`
	OrganizationId NullableString `json:"organization_id,omitempty"`
	OrganizationName NullableString `json:"organization_name,omitempty"`
	Replicas NullableInt32 `json:"replicas,omitempty"`
	State NullableState `json:"state,omitempty"`
	Storage NullableStorage `json:"storage,omitempty"`
	TrunkInstalls []TrunkInstallStatus `json:"trunk_installs,omitempty"`
}

// NewReadCluster instantiates a new ReadCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadCluster(entityType EntityType, environment Environment, instanceName string) *ReadCluster {
	this := ReadCluster{}
	this.EntityType = entityType
	this.Environment = environment
	this.InstanceName = instanceName
	return &this
}

// NewReadClusterWithDefaults instantiates a new ReadCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadClusterWithDefaults() *ReadCluster {
	this := ReadCluster{}
	return &this
}

// GetConnectionInfo returns the ConnectionInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetConnectionInfo() ConnectionInfo {
	if o == nil || IsNil(o.ConnectionInfo.Get()) {
		var ret ConnectionInfo
		return ret
	}
	return *o.ConnectionInfo.Get()
}

// GetConnectionInfoOk returns a tuple with the ConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetConnectionInfoOk() (*ConnectionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionInfo.Get(), o.ConnectionInfo.IsSet()
}

// HasConnectionInfo returns a boolean if a field has been set.
func (o *ReadCluster) HasConnectionInfo() bool {
	if o != nil && o.ConnectionInfo.IsSet() {
		return true
	}

	return false
}

// SetConnectionInfo gets a reference to the given NullableConnectionInfo and assigns it to the ConnectionInfo field.
func (o *ReadCluster) SetConnectionInfo(v ConnectionInfo) {
	o.ConnectionInfo.Set(&v)
}
// SetConnectionInfoNil sets the value for ConnectionInfo to be an explicit nil
func (o *ReadCluster) SetConnectionInfoNil() {
	o.ConnectionInfo.Set(nil)
}

// UnsetConnectionInfo ensures that no value is present for ConnectionInfo, not even an explicit nil
func (o *ReadCluster) UnsetConnectionInfo() {
	o.ConnectionInfo.Unset()
}

// GetCpu returns the Cpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetCpu() Cpu {
	if o == nil || IsNil(o.Cpu.Get()) {
		var ret Cpu
		return ret
	}
	return *o.Cpu.Get()
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetCpuOk() (*Cpu, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cpu.Get(), o.Cpu.IsSet()
}

// HasCpu returns a boolean if a field has been set.
func (o *ReadCluster) HasCpu() bool {
	if o != nil && o.Cpu.IsSet() {
		return true
	}

	return false
}

// SetCpu gets a reference to the given NullableCpu and assigns it to the Cpu field.
func (o *ReadCluster) SetCpu(v Cpu) {
	o.Cpu.Set(&v)
}
// SetCpuNil sets the value for Cpu to be an explicit nil
func (o *ReadCluster) SetCpuNil() {
	o.Cpu.Set(nil)
}

// UnsetCpu ensures that no value is present for Cpu, not even an explicit nil
func (o *ReadCluster) UnsetCpu() {
	o.Cpu.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ReadCluster) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadCluster) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ReadCluster) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ReadCluster) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEntityProperties returns the EntityProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetEntityProperties() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EntityProperties
}

// GetEntityPropertiesOk returns a tuple with the EntityProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetEntityPropertiesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EntityProperties) {
		return nil, false
	}
	return &o.EntityProperties, true
}

// HasEntityProperties returns a boolean if a field has been set.
func (o *ReadCluster) HasEntityProperties() bool {
	if o != nil && IsNil(o.EntityProperties) {
		return true
	}

	return false
}

// SetEntityProperties gets a reference to the given interface{} and assigns it to the EntityProperties field.
func (o *ReadCluster) SetEntityProperties(v interface{}) {
	o.EntityProperties = v
}

// GetEntityType returns the EntityType field value
func (o *ReadCluster) GetEntityType() EntityType {
	if o == nil {
		var ret EntityType
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *ReadCluster) GetEntityTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *ReadCluster) SetEntityType(v EntityType) {
	o.EntityType = v
}

// GetEnvironment returns the Environment field value
func (o *ReadCluster) GetEnvironment() Environment {
	if o == nil {
		var ret Environment
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *ReadCluster) GetEnvironmentOk() (*Environment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *ReadCluster) SetEnvironment(v Environment) {
	o.Environment = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetExtensions() []ExtensionStatus {
	if o == nil {
		var ret []ExtensionStatus
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetExtensionsOk() ([]ExtensionStatus, bool) {
	if o == nil || IsNil(o.Extensions) {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *ReadCluster) HasExtensions() bool {
	if o != nil && IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []ExtensionStatus and assigns it to the Extensions field.
func (o *ReadCluster) SetExtensions(v []ExtensionStatus) {
	o.Extensions = v
}

// GetExtraDomainsRw returns the ExtraDomainsRw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetExtraDomainsRw() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExtraDomainsRw
}

// GetExtraDomainsRwOk returns a tuple with the ExtraDomainsRw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetExtraDomainsRwOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtraDomainsRw) {
		return nil, false
	}
	return o.ExtraDomainsRw, true
}

// HasExtraDomainsRw returns a boolean if a field has been set.
func (o *ReadCluster) HasExtraDomainsRw() bool {
	if o != nil && IsNil(o.ExtraDomainsRw) {
		return true
	}

	return false
}

// SetExtraDomainsRw gets a reference to the given []string and assigns it to the ExtraDomainsRw field.
func (o *ReadCluster) SetExtraDomainsRw(v []string) {
	o.ExtraDomainsRw = v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *ReadCluster) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableString and assigns it to the InstanceId field.
func (o *ReadCluster) SetInstanceId(v string) {
	o.InstanceId.Set(&v)
}
// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *ReadCluster) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *ReadCluster) UnsetInstanceId() {
	o.InstanceId.Unset()
}

// GetInstanceName returns the InstanceName field value
func (o *ReadCluster) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *ReadCluster) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *ReadCluster) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *ReadCluster) GetLastUpdatedAt() time.Time {
	if o == nil || IsNil(o.LastUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadCluster) GetLastUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedAt) {
		return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *ReadCluster) HasLastUpdatedAt() bool {
	if o != nil && !IsNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given time.Time and assigns it to the LastUpdatedAt field.
func (o *ReadCluster) SetLastUpdatedAt(v time.Time) {
	o.LastUpdatedAt = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetMemory() Memory {
	if o == nil || IsNil(o.Memory.Get()) {
		var ret Memory
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetMemoryOk() (*Memory, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *ReadCluster) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableMemory and assigns it to the Memory field.
func (o *ReadCluster) SetMemory(v Memory) {
	o.Memory.Set(&v)
}
// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *ReadCluster) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *ReadCluster) UnsetMemory() {
	o.Memory.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ReadCluster) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *ReadCluster) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *ReadCluster) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *ReadCluster) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ReadCluster) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ReadCluster) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}
// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ReadCluster) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ReadCluster) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetReplicas returns the Replicas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetReplicas() int32 {
	if o == nil || IsNil(o.Replicas.Get()) {
		var ret int32
		return ret
	}
	return *o.Replicas.Get()
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Replicas.Get(), o.Replicas.IsSet()
}

// HasReplicas returns a boolean if a field has been set.
func (o *ReadCluster) HasReplicas() bool {
	if o != nil && o.Replicas.IsSet() {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given NullableInt32 and assigns it to the Replicas field.
func (o *ReadCluster) SetReplicas(v int32) {
	o.Replicas.Set(&v)
}
// SetReplicasNil sets the value for Replicas to be an explicit nil
func (o *ReadCluster) SetReplicasNil() {
	o.Replicas.Set(nil)
}

// UnsetReplicas ensures that no value is present for Replicas, not even an explicit nil
func (o *ReadCluster) UnsetReplicas() {
	o.Replicas.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetState() State {
	if o == nil || IsNil(o.State.Get()) {
		var ret State
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetStateOk() (*State, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *ReadCluster) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableState and assigns it to the State field.
func (o *ReadCluster) SetState(v State) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *ReadCluster) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *ReadCluster) UnsetState() {
	o.State.Unset()
}

// GetStorage returns the Storage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetStorage() Storage {
	if o == nil || IsNil(o.Storage.Get()) {
		var ret Storage
		return ret
	}
	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetStorageOk() (*Storage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// HasStorage returns a boolean if a field has been set.
func (o *ReadCluster) HasStorage() bool {
	if o != nil && o.Storage.IsSet() {
		return true
	}

	return false
}

// SetStorage gets a reference to the given NullableStorage and assigns it to the Storage field.
func (o *ReadCluster) SetStorage(v Storage) {
	o.Storage.Set(&v)
}
// SetStorageNil sets the value for Storage to be an explicit nil
func (o *ReadCluster) SetStorageNil() {
	o.Storage.Set(nil)
}

// UnsetStorage ensures that no value is present for Storage, not even an explicit nil
func (o *ReadCluster) UnsetStorage() {
	o.Storage.Unset()
}

// GetTrunkInstalls returns the TrunkInstalls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReadCluster) GetTrunkInstalls() []TrunkInstallStatus {
	if o == nil {
		var ret []TrunkInstallStatus
		return ret
	}
	return o.TrunkInstalls
}

// GetTrunkInstallsOk returns a tuple with the TrunkInstalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReadCluster) GetTrunkInstallsOk() ([]TrunkInstallStatus, bool) {
	if o == nil || IsNil(o.TrunkInstalls) {
		return nil, false
	}
	return o.TrunkInstalls, true
}

// HasTrunkInstalls returns a boolean if a field has been set.
func (o *ReadCluster) HasTrunkInstalls() bool {
	if o != nil && IsNil(o.TrunkInstalls) {
		return true
	}

	return false
}

// SetTrunkInstalls gets a reference to the given []TrunkInstallStatus and assigns it to the TrunkInstalls field.
func (o *ReadCluster) SetTrunkInstalls(v []TrunkInstallStatus) {
	o.TrunkInstalls = v
}

func (o ReadCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionInfo.IsSet() {
		toSerialize["connection_info"] = o.ConnectionInfo.Get()
	}
	if o.Cpu.IsSet() {
		toSerialize["cpu"] = o.Cpu.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.EntityProperties != nil {
		toSerialize["entity_properties"] = o.EntityProperties
	}
	toSerialize["entity_type"] = o.EntityType
	toSerialize["environment"] = o.Environment
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.ExtraDomainsRw != nil {
		toSerialize["extra_domains_rw"] = o.ExtraDomainsRw
	}
	if o.InstanceId.IsSet() {
		toSerialize["instance_id"] = o.InstanceId.Get()
	}
	toSerialize["instance_name"] = o.InstanceName
	if !IsNil(o.LastUpdatedAt) {
		toSerialize["last_updated_at"] = o.LastUpdatedAt
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organization_id"] = o.OrganizationId.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organization_name"] = o.OrganizationName.Get()
	}
	if o.Replicas.IsSet() {
		toSerialize["replicas"] = o.Replicas.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Storage.IsSet() {
		toSerialize["storage"] = o.Storage.Get()
	}
	if o.TrunkInstalls != nil {
		toSerialize["trunk_installs"] = o.TrunkInstalls
	}
	return toSerialize, nil
}

type NullableReadCluster struct {
	value *ReadCluster
	isSet bool
}

func (v NullableReadCluster) Get() *ReadCluster {
	return v.value
}

func (v *NullableReadCluster) Set(val *ReadCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableReadCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableReadCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadCluster(val *ReadCluster) *NullableReadCluster {
	return &NullableReadCluster{value: val, isSet: true}
}

func (v NullableReadCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


