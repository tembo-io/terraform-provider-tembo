openapi: 3.0.3
info:
  description: "Platform API for Tembo Cloud\n            </br>\n            </br>\n\
    \            To find a Tembo Data API, please find it here:\n            </br>\n\
    \            </br>\n            [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)\n\
    \            "
  title: Tembo Cloud
  version: v1.0.0
servers:
- url: /
security:
- jwt_token: []
paths:
  /api/v1/orgs/instances/schema:
    get:
      description: |
        Get the json-schema for an instance
      operationId: get_schema
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: json-schema for a Tembo Instance
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
      summary: Get the json-schema for an instance
      tags:
      - instance
  /api/v1/orgs/{org_id}/instances:
    get:
      description: |
        Get all Tembo instances in an organization
      operationId: get_all
      parameters:
      - description: organization id for the request
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: All instances in your org
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid org_id
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
      summary: Get all Tembo instances in an organization
      tags:
      - instance
    post:
      description: |
        Create a new Tembo instance
      operationId: create_instance
      parameters:
      - description: Organization ID that owns the Tembo instance
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstance'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Creating new Tembo instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid request parameters
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Naming conflict
      summary: Create a new Tembo instance
      tags:
      - instance
  /api/v1/orgs/{org_id}/instances/{instance_id}:
    delete:
      description: |
        Delete an existing Tembo instance
      operationId: delete_instance
      parameters:
      - description: Organization id of the instance to delete
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      - description: Delete this instance id
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Deleting instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid request parameters
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid state transition
      summary: Delete an existing Tembo instance
      tags:
      - instance
    get:
      description: |
        Get an existing Tembo instance
      operationId: get_instance
      parameters:
      - description: Organization ID that owns the instance
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: The requested Tembo instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid org_id
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
      summary: Get an existing Tembo instance
      tags:
      - instance
    patch:
      description: |
        Update attributes on an existing Tembo instance
      operationId: patch_instance
      parameters:
      - description: Organization ID that owns the instance
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchInstance'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Updating attributes on the instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid request parameters
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid state transition
      summary: Update attributes on an existing Tembo instance
      tags:
      - instance
    post:
      description: |-
        Lifecycle events for a Tembo instance

        Currently only supports restart
      operationId: instance_event
      parameters:
      - description: Organization ID that owns the Tembo instance
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: event_type
        required: true
        schema:
          $ref: '#/components/schemas/InstanceEvent'
        style: form
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Replace the attributes of the Tembo instance
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid state transition
      summary: Lifecycle events for a Tembo instance
      tags:
      - instance
    put:
      description: |
        Replace all attributes of an existing Tembo instance
      operationId: put_instance
      parameters:
      - description: Organization ID that owns the Tembo instance
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstance'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Replace the attributes of the Tembo instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid request parameters
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Invalid state transition
      summary: Replace all attributes of an existing Tembo instance
      tags:
      - instance
  /api/v1/stacks:
    get:
      description: |
        Attributes for all stacks
      operationId: get_all_entities
      responses:
        "200":
          content:
            application/json:
              schema:
                items: {}
                type: array
          description: Stack specification represented as JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
      summary: Attributes for all stacks
      tags:
      - stack
  /api/v1/stacks/{type}:
    get:
      description: |
        Get the attributes of a single stack
      operationId: get_entity
      parameters:
      - description: the type of entity
        example: standard
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/StackType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Specification of the entity
        "400":
          content:
            application/json:
              schema: {}
          description: Invalid Stack
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseSchema'
          description: Unauthorized
      summary: Get the attributes of a single stack
      tags:
      - stack
components:
  schemas:
    AppService:
      properties:
        args:
          items:
            type: string
          nullable: true
          type: array
        command:
          items:
            type: string
          nullable: true
          type: array
        env:
          items:
            $ref: '#/components/schemas/EnvVar'
          nullable: true
          type: array
        image:
          type: string
        middlewares:
          items:
            $ref: '#/components/schemas/Middleware'
          nullable: true
          type: array
        name:
          type: string
        probes:
          allOf:
          - $ref: '#/components/schemas/Probes'
          nullable: true
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceRequirements'
          nullable: true
        routing:
          items:
            $ref: '#/components/schemas/Routing'
          nullable: true
          type: array
      required:
      - image
      - name
      type: object
    AppServiceConfig:
      properties:
        env:
          items:
            $ref: '#/components/schemas/EnvVar'
          nullable: true
          type: array
      type: object
    AppServiceType:
      oneOf:
      - $ref: '#/components/schemas/AppServiceType_oneOf'
    ConnectionInfo:
      properties:
        host:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        user:
          type: string
      required:
      - host
      - password
      - port
      - user
      type: object
    ConnectionPooler:
      properties:
        enabled:
          type: boolean
        pooler:
          $ref: '#/components/schemas/PgBouncer'
      type: object
    Cpu:
      enum:
      - "1"
      - "2"
      - "4"
      - "8"
      - "16"
      - "32"
      type: string
    CreateInstance:
      example:
        instance_name: instance_name
        memory: null
        app_services:
        - null
        - null
        replicas: 0
        cpu: null
        storage: null
        environment: null
        extensions:
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        extra_domains_rw:
        - extra_domains_rw
        - extra_domains_rw
        stack_type: null
        postgres_configs:
        - name: name
          value: value
        - name: name
          value: value
        trunk_installs:
        - name: name
          version: version
        - name: name
          version: version
        ip_allow_list:
        - ip_allow_list
        - ip_allow_list
        connection_pooler: ""
      properties:
        app_services:
          items:
            $ref: '#/components/schemas/AppServiceType'
          nullable: true
          type: array
        connection_pooler:
          allOf:
          - $ref: '#/components/schemas/ConnectionPooler'
          nullable: true
        cpu:
          $ref: '#/components/schemas/Cpu'
        environment:
          $ref: '#/components/schemas/Environment'
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          nullable: true
          type: array
        extra_domains_rw:
          items:
            type: string
          nullable: true
          type: array
        instance_name:
          type: string
        ip_allow_list:
          items:
            type: string
          nullable: true
          type: array
        memory:
          $ref: '#/components/schemas/Memory'
        postgres_configs:
          items:
            $ref: '#/components/schemas/PgConfig'
          nullable: true
          type: array
        replicas:
          format: int32
          type: integer
        stack_type:
          $ref: '#/components/schemas/StackType'
        storage:
          $ref: '#/components/schemas/Storage'
        trunk_installs:
          items:
            $ref: '#/components/schemas/TrunkInstall'
          nullable: true
          type: array
      required:
      - cpu
      - environment
      - instance_name
      - memory
      - stack_type
      - storage
      type: object
    EnvVar:
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
        valueFromPlatform:
          allOf:
          - $ref: '#/components/schemas/EnvVarRef'
          nullable: true
      required:
      - name
      type: object
    EnvVarRef:
      enum:
      - ReadOnlyConnection
      - ReadWriteConnection
      type: string
    Environment:
      enum:
      - dev
      - test
      - prod
      type: string
    ErrorResponseSchema:
      example:
        error: error
      properties:
        error:
          type: string
      required:
      - error
      type: object
    Extension:
      example:
        name: name
        description: description
        locations:
        - schema: schema
          database: database
          version: version
          enabled: true
        - schema: schema
          database: database
          version: version
          enabled: true
      properties:
        description:
          nullable: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/ExtensionInstallLocation'
          type: array
        name:
          type: string
      required:
      - locations
      - name
      type: object
    ExtensionInstallLocation:
      example:
        schema: schema
        database: database
        version: version
        enabled: true
      properties:
        database:
          type: string
        enabled:
          type: boolean
        schema:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
      required:
      - enabled
      type: object
    ExtensionInstallLocationStatus:
      example:
        error_message: error_message
        schema: schema
        database: database
        error: true
        version: version
        enabled: true
      properties:
        database:
          type: string
        enabled:
          nullable: true
          type: boolean
        error:
          nullable: true
          type: boolean
        error_message:
          nullable: true
          type: string
        schema:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
      type: object
    ExtensionStatus:
      example:
        name: name
        description: description
        locations:
        - error_message: error_message
          schema: schema
          database: database
          error: true
          version: version
          enabled: true
        - error_message: error_message
          schema: schema
          database: database
          error: true
          version: version
          enabled: true
      properties:
        description:
          nullable: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/ExtensionInstallLocationStatus'
          type: array
        name:
          type: string
      required:
      - locations
      - name
      type: object
    HeaderConfig:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      required:
      - config
      - name
      type: object
    Infrastructure:
      properties:
        cpu:
          type: string
        memory:
          type: string
        storage:
          type: string
      type: object
    Ingress:
      properties:
        enabled:
          type: boolean
        path:
          nullable: true
          type: string
      required:
      - enabled
      type: object
    Instance:
      example:
        first_recoverability_time: 2000-01-23T04:56:07.000+00:00
        instance_name: instance_name
        memory: null
        app_services:
        - null
        - null
        replicas: 0
        cpu: null
        created_at: 2000-01-23T04:56:07.000+00:00
        organization_name: organization_name
        storage: null
        runtime_config:
        - name: name
          value: value
        - name: name
          value: value
        environment: null
        extensions:
        - name: name
          description: description
          locations:
          - error_message: error_message
            schema: schema
            database: database
            error: true
            version: version
            enabled: true
          - error_message: error_message
            schema: schema
            database: database
            error: true
            version: version
            enabled: true
        - name: name
          description: description
          locations:
          - error_message: error_message
            schema: schema
            database: database
            error: true
            version: version
            enabled: true
          - error_message: error_message
            schema: schema
            database: database
            error: true
            version: version
            enabled: true
        extra_domains_rw:
        - extra_domains_rw
        - extra_domains_rw
        instance_id: instance_id
        stack_type: null
        connection_info: ""
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        postgres_configs:
        - name: name
          value: value
        - name: name
          value: value
        organization_id: organization_id
        trunk_installs:
        - error_message: error_message
          installed_to_pods:
          - installed_to_pods
          - installed_to_pods
          name: name
          error: true
          version: version
        - error_message: error_message
          installed_to_pods:
          - installed_to_pods
          - installed_to_pods
          name: name
          error: true
          version: version
        ip_allow_list:
        - ip_allow_list
        - ip_allow_list
        state: null
        connection_pooler: ""
      properties:
        app_services:
          items:
            $ref: '#/components/schemas/AppServiceType'
          nullable: true
          type: array
        connection_info:
          allOf:
          - $ref: '#/components/schemas/ConnectionInfo'
          nullable: true
        connection_pooler:
          allOf:
          - $ref: '#/components/schemas/ConnectionPooler'
          nullable: true
        cpu:
          $ref: '#/components/schemas/Cpu'
        created_at:
          format: date-time
          type: string
        environment:
          $ref: '#/components/schemas/Environment'
        extensions:
          items:
            $ref: '#/components/schemas/ExtensionStatus'
          nullable: true
          type: array
        extra_domains_rw:
          items:
            type: string
          nullable: true
          type: array
        first_recoverability_time:
          format: date-time
          nullable: true
          type: string
        instance_id:
          type: string
        instance_name:
          type: string
        ip_allow_list:
          items:
            type: string
          nullable: true
          type: array
        last_updated_at:
          format: date-time
          type: string
        memory:
          $ref: '#/components/schemas/Memory'
        organization_id:
          type: string
        organization_name:
          type: string
        postgres_configs:
          items:
            $ref: '#/components/schemas/PgConfig'
          nullable: true
          type: array
        replicas:
          format: int32
          type: integer
        runtime_config:
          items:
            $ref: '#/components/schemas/PgConfig'
          nullable: true
          type: array
        stack_type:
          $ref: '#/components/schemas/StackType'
        state:
          $ref: '#/components/schemas/State'
        storage:
          $ref: '#/components/schemas/Storage'
        trunk_installs:
          items:
            $ref: '#/components/schemas/TrunkInstallStatus'
          nullable: true
          type: array
      required:
      - cpu
      - environment
      - instance_id
      - instance_name
      - memory
      - organization_id
      - organization_name
      - replicas
      - stack_type
      - state
      - storage
      type: object
    InstanceEvent:
      enum:
      - restart
      type: string
    IntOrString:
      oneOf:
      - $ref: '#/components/schemas/IntOrString_oneOf'
      - $ref: '#/components/schemas/IntOrString_oneOf_1'
    Memory:
      enum:
      - 1Gi
      - 2Gi
      - 4Gi
      - 8Gi
      - 16Gi
      - 32Gi
      type: string
    Middleware:
      oneOf:
      - $ref: '#/components/schemas/Middleware_oneOf'
      - $ref: '#/components/schemas/Middleware_oneOf_1'
    PatchInstance:
      example:
        environment: ""
        extensions:
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        extra_domains_rw:
        - extra_domains_rw
        - extra_domains_rw
        memory: ""
        app_services:
        - null
        - null
        postgres_configs:
        - name: name
          value: value
        - name: name
          value: value
        replicas: ""
        trunk_installs:
        - name: name
          version: version
        - name: name
          version: version
        cpu: ""
        ip_allow_list:
        - ip_allow_list
        - ip_allow_list
        storage: ""
        connection_pooler: ""
      properties:
        app_services:
          items:
            $ref: '#/components/schemas/AppServiceType'
          nullable: true
          type: array
        connection_pooler:
          allOf:
          - $ref: '#/components/schemas/ConnectionPooler'
          nullable: true
        cpu:
          allOf:
          - $ref: '#/components/schemas/Cpu'
          nullable: true
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          nullable: true
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          nullable: true
          type: array
        extra_domains_rw:
          items:
            type: string
          nullable: true
          type: array
        ip_allow_list:
          items:
            type: string
          nullable: true
          type: array
        memory:
          allOf:
          - $ref: '#/components/schemas/Memory'
          nullable: true
        postgres_configs:
          items:
            $ref: '#/components/schemas/PgConfig'
          nullable: true
          type: array
        replicas:
          allOf:
          - $ref: '#/components/schemas/Replicas'
          nullable: true
        storage:
          allOf:
          - $ref: '#/components/schemas/Storage'
          nullable: true
        trunk_installs:
          items:
            $ref: '#/components/schemas/TrunkInstall'
          nullable: true
          type: array
      type: object
    PgBouncer:
      properties:
        parameters:
          additionalProperties:
            type: string
          nullable: true
          type: object
        poolMode:
          $ref: '#/components/schemas/PoolerPgbouncerPoolMode'
        resources:
          allOf:
          - $ref: '#/components/schemas/PoolerTemplateSpecContainersResources'
          nullable: true
      type: object
    PgConfig:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    PoolerPgbouncerPoolMode:
      enum:
      - session
      - transaction
      type: string
    PoolerTemplateSpecContainersResources:
      properties:
        claims:
          items:
            $ref: '#/components/schemas/PoolerTemplateSpecContainersResourcesClaims'
          nullable: true
          type: array
        limits:
          additionalProperties:
            $ref: '#/components/schemas/IntOrString'
          nullable: true
          type: object
        requests:
          additionalProperties:
            $ref: '#/components/schemas/IntOrString'
          nullable: true
          type: object
      type: object
    PoolerTemplateSpecContainersResourcesClaims:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    Probe:
      properties:
        initialDelaySeconds:
          format: int32
          minimum: 0
          type: integer
        path:
          type: string
        port:
          type: string
      required:
      - initialDelaySeconds
      - path
      - port
      type: object
    Probes:
      properties:
        liveness:
          $ref: '#/components/schemas/Probe'
        readiness:
          $ref: '#/components/schemas/Probe'
      required:
      - liveness
      - readiness
      type: object
    Replicas:
      format: int32
      type: integer
    Resource:
      properties:
        cpu:
          type: string
        memory:
          type: string
      required:
      - cpu
      - memory
      type: object
    ResourceRequirements:
      properties:
        limits:
          allOf:
          - $ref: '#/components/schemas/Resource'
          nullable: true
        requests:
          allOf:
          - $ref: '#/components/schemas/Resource'
          nullable: true
      type: object
    Routing:
      properties:
        ingressPath:
          nullable: true
          type: string
        middlewares:
          items:
            type: string
          nullable: true
          type: array
        port:
          format: int32
          minimum: 0
          type: integer
      required:
      - port
      type: object
    StackType:
      enum:
      - Standard
      - MessageQueue
      - MachineLearning
      - OLAP
      - OLTP
      type: string
    State:
      enum:
      - Submitted
      - Up
      - Configuring
      - Error
      - Restarting
      - Starting
      - Stopping
      - Stopped
      - Deleting
      - Deleted
      type: string
    Storage:
      enum:
      - 10Gi
      - 50Gi
      - 100Gi
      - 200Gi
      - 300Gi
      - 400Gi
      - 500Gi
      type: string
    StripPrefixConfig:
      properties:
        config:
          items:
            type: string
          type: array
        name:
          type: string
      required:
      - config
      - name
      type: object
    TrunkInstall:
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          nullable: true
          type: string
      required:
      - name
      type: object
    TrunkInstallStatus:
      example:
        error_message: error_message
        installed_to_pods:
        - installed_to_pods
        - installed_to_pods
        name: name
        error: true
        version: version
      properties:
        error:
          type: boolean
        error_message:
          nullable: true
          type: string
        installed_to_pods:
          items:
            type: string
          nullable: true
          type: array
        name:
          type: string
        version:
          nullable: true
          type: string
      required:
      - error
      - name
      type: object
    UpdateInstance:
      example:
        environment: null
        extensions:
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        - name: name
          description: description
          locations:
          - schema: schema
            database: database
            version: version
            enabled: true
          - schema: schema
            database: database
            version: version
            enabled: true
        extra_domains_rw:
        - extra_domains_rw
        - extra_domains_rw
        memory: null
        app_services:
        - null
        - null
        postgres_configs:
        - name: name
          value: value
        - name: name
          value: value
        replicas: 0
        trunk_installs:
        - name: name
          version: version
        - name: name
          version: version
        cpu: null
        ip_allow_list:
        - ip_allow_list
        - ip_allow_list
        storage: null
        connection_pooler: ""
      properties:
        app_services:
          items:
            $ref: '#/components/schemas/AppServiceType'
          nullable: true
          type: array
        connection_pooler:
          allOf:
          - $ref: '#/components/schemas/ConnectionPooler'
          nullable: true
        cpu:
          $ref: '#/components/schemas/Cpu'
        environment:
          $ref: '#/components/schemas/Environment'
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          nullable: true
          type: array
        extra_domains_rw:
          items:
            type: string
          nullable: true
          type: array
        ip_allow_list:
          items:
            type: string
          nullable: true
          type: array
        memory:
          $ref: '#/components/schemas/Memory'
        postgres_configs:
          items:
            $ref: '#/components/schemas/PgConfig'
          nullable: true
          type: array
        replicas:
          format: int32
          type: integer
        storage:
          $ref: '#/components/schemas/Storage'
        trunk_installs:
          items:
            $ref: '#/components/schemas/TrunkInstall'
          nullable: true
          type: array
      required:
      - cpu
      - environment
      - memory
      - replicas
      - storage
      type: object
    AppServiceType_oneOf:
      properties:
        restapi:
          allOf:
          - $ref: '#/components/schemas/AppServiceConfig'
          nullable: true
      required:
      - restapi
      type: object
    IntOrString_oneOf:
      properties:
        Int:
          format: int32
          type: integer
      required:
      - Int
      type: object
    IntOrString_oneOf_1:
      properties:
        String:
          type: string
      required:
      - String
      type: object
    Middleware_oneOf:
      properties:
        customRequestHeaders:
          $ref: '#/components/schemas/HeaderConfig'
      required:
      - customRequestHeaders
      type: object
    Middleware_oneOf_1:
      properties:
        stripPrefix:
          $ref: '#/components/schemas/StripPrefixConfig'
      required:
      - stripPrefix
      type: object
  securitySchemes:
    jwt_token:
      bearerFormat: JWT
      scheme: bearer
      type: http
