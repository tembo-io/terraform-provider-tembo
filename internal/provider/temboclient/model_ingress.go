/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
)

// checks if the Ingress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ingress{}

// Ingress struct for Ingress
type Ingress struct {
	Enabled bool `json:"enabled"`
	Path NullableString `json:"path,omitempty"`
}

// NewIngress instantiates a new Ingress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngress(enabled bool) *Ingress {
	this := Ingress{}
	this.Enabled = enabled
	return &this
}

// NewIngressWithDefaults instantiates a new Ingress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressWithDefaults() *Ingress {
	this := Ingress{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *Ingress) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Ingress) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Ingress) SetEnabled(v bool) {
	o.Enabled = v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Ingress) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Ingress) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *Ingress) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *Ingress) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *Ingress) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *Ingress) UnsetPath() {
	o.Path.Unset()
}

func (o Ingress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ingress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	return toSerialize, nil
}

type NullableIngress struct {
	value *Ingress
	isSet bool
}

func (v NullableIngress) Get() *Ingress {
	return v.value
}

func (v *NullableIngress) Set(val *Ingress) {
	v.value = val
	v.isSet = true
}

func (v NullableIngress) IsSet() bool {
	return v.isSet
}

func (v *NullableIngress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngress(val *Ingress) *NullableIngress {
	return &NullableIngress{value: val, isSet: true}
}

func (v NullableIngress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


