/*
Tembo Cloud

Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package temboclient

import (
	"encoding/json"
	"fmt"
)

// checks if the AppMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppMetrics{}

// AppMetrics struct for AppMetrics
type AppMetrics struct {
	// path to scrape metrics
	Path string `json:"path"`
	// port must be also exposed in one of AppService.routing[]
	Port int32 `json:"port"`
	AdditionalProperties map[string]interface{}
}

type _AppMetrics AppMetrics

// NewAppMetrics instantiates a new AppMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppMetrics(path string, port int32) *AppMetrics {
	this := AppMetrics{}
	this.Path = path
	this.Port = port
	return &this
}

// NewAppMetricsWithDefaults instantiates a new AppMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppMetricsWithDefaults() *AppMetrics {
	this := AppMetrics{}
	return &this
}

// GetPath returns the Path field value
func (o *AppMetrics) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *AppMetrics) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *AppMetrics) SetPath(v string) {
	o.Path = v
}

// GetPort returns the Port field value
func (o *AppMetrics) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *AppMetrics) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *AppMetrics) SetPort(v int32) {
	o.Port = v
}

func (o AppMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["path"] = o.Path
	toSerialize["port"] = o.Port

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppMetrics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppMetrics := _AppMetrics{}

	err = json.Unmarshal(data, &varAppMetrics)

	if err != nil {
		return err
	}

	*o = AppMetrics(varAppMetrics)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "path")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppMetrics struct {
	value *AppMetrics
	isSet bool
}

func (v NullableAppMetrics) Get() *AppMetrics {
	return v.value
}

func (v *NullableAppMetrics) Set(val *AppMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableAppMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableAppMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppMetrics(val *AppMetrics) *NullableAppMetrics {
	return &NullableAppMetrics{value: val, isSet: true}
}

func (v NullableAppMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


